// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  isAdmin   Boolean  @default(false)
  order     Order[]
  reviews   Review[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  imageUrl    String
  category    Category?    @relation(fields: [categoryId], references: [id])
  categoryId  String?      @db.ObjectId
  reviews     Review[]
  orderItems  OrderItems[]
  createdAt   DateTime     @default(now())
}

model Category {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  products Product[]
}

model Order {
  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  user      User         @relation(fields: [userId], references: [id])
  userId    String       @db.ObjectId
  items     OrderItems[]
  total     Float
  status    String       @default("PENDENTE")
  createdAt DateTime     @default(now())
}

model OrderItems {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String  @db.ObjectId
  products  Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId
  quantity  Int
  price     Float
}

model Review {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
  products   Product  @relation(fields: [productsId], references: [id])
  productsId String   @db.ObjectId
  comment    String
  rating     Int
  createdAt  DateTime @default(now())
}
